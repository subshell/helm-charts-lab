apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "artifactory-search.fullname" . }}
  labels:
    {{- include "artifactory-search.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "artifactory-search.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        "cluster-autoscaler.kubernetes.io/safe-to-evict": "true"
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        {{- include "artifactory-search.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "artifactory-search.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      restartPolicy: Always
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          volumeMounts:
            - name: config
              mountPath: "/application.yml"
              subPath: "application.yml"
          env:
            - name: artifactorysearch.username
              valueFrom: 
                secretKeyRef:
                  key: username
                  name: {{ required "A valid secret name must be provided in .Values.artifactorySearch.artifactoryCredentialsSecretName" .Values.artifactorySearch.artifactoryCredentialsSecretName | quote }}
            - name: artifactorysearch.password
              valueFrom: 
                secretKeyRef:
                  key: password
                  name: {{ required "A valid secret name must be provided in .Values.artifactorySearch.artifactoryCredentialsSecretName" .Values.artifactorySearch.artifactoryCredentialsSecretName | quote }}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      volumes:
        - name: config
          configMap:
            name: {{ include "artifactory-search.fullname" . }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
